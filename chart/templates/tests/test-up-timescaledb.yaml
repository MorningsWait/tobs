{{- $tsdb := index .Values "timescaledb-single" -}}
{{- if $tsdb.enabled -}}
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: "{{ .Release.Name }}-test-up-timescale"
  namespace: "{{ template "tobs.namespace" . }}"
  labels:
    {{- include "tobs.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ .Release.Name }}-test-up-timescale"
  namespace: "{{ template "tobs.namespace" . }}"
  labels:
    {{- include "tobs.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ .Release.Name }}-test-up-timescale"
subjects:
  - kind: ServiceAccount
    name: "{{ .Release.Name }}-test-up-timescale"
    namespace: "{{ template "tobs.namespace" . }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ .Release.Name }}-test-up-timescale"
  namespace: "{{ template "tobs.namespace" . }}"
  labels:
    {{- include "tobs.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
rules:
- apiGroups:
  - ""
  resources:
  - configmap
  verbs:
  - get
  resourceNames:
  - ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-test-up-timescale"
  namespace: "{{ template "tobs.namespace" . }}"
  labels:
    {{- include "tobs.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
data:
  test-timescale.sh: |-
    #!/bin/bash

    #set -euo pipefail
    set -o pipefail

    # Setup query to prometheus
    CHECKEND=0
    RELEASE="{{ .Release.Name }}"
    NAMESPACE="{{ .Release.Namespace }}"

    PROM_QUERY_URL="http://${RELEASE}-promscale.${NAMESPACE}.svc:9201/api/v1/query?"

    function query() {
      local query
      query=$(cat <<-EOF
    query=up==0
    EOF
    )

    # Query Promscale URL and return a boolean if there are any returned
    # values where up > 0
    curl -XPOST -G -H "Content-Type: application/x-www-form-urlencoded" \
      "${PROM_QUERY_URL}" --data-urlencode "${query}" 2>/dev/null\
      |jq '.data.result | length > 0'
    }

    # Give time for Promscale to become ready
    sleep 30

    # Loop through querying for up status.  Promscale can take some time
    # to show up as up==0
    RESULT=$(query)
    while [ $CHECKEND -lt 20 ] && [ "${RESULT}" == "true" ];
    do
      CHECKEND=$(( CHECKEND + 1 ))
      echo ${CHECKEND}: TRY AGAIN
      sleep 10
      RESULT=$(query)
    done

    if [ ${CHECKEND} -eq 20 ] && [ "${RESULT}" == "true" ]; then
      echo "QUERY TO DATASTORE FAILED, EXIT"
      exit 1
    elif [ "${RESULT}" == "false" ]; then
      echo "PROMSCALE QUERY WAS SUCCESSFUL"
    fi

---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-test-up-timescale"
  labels:
    {{- include "tobs.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: checker
      # TODO(paulfantom): move image build to tobs repo
      # Current multi-arch image is built from https://github.com/paulfantom/dockerfiles/blob/master/curl-jq/Dockerfile
      image: quay.io/paulfantom/curl-jq
      command:
        - /bin/bash
        - -c
        - /usr/local/bin/test-timescale.sh
      volumeMounts:
      - mountPath: /usr/local/bin/test-timescale.sh
        name: test-timescale-bin
        readOnly: true
        subPath: test-timescale.sh
  serviceAccountName: "{{ .Release.Name }}-test-up-timescale"
  restartPolicy: Never
  volumes:
  - name: test-timescale-bin
    configMap:
      name: "{{ .Release.Name }}-test-up-timescale"
      defaultMode: 0755
{{- end -}}
