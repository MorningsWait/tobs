{{- $db := index .Values "timescaledb-single" -}}
{{- if and
    $db.enabled
    (eq .Values.promscale.connectionSecretName "tobs-promscale-connection")
    (eq .Values.promscale.connection.password "")
    (eq .Values.promscale.connection.uri "")
-}}
---
apiVersion: v1
kind: ServiceAccount
#automountServiceAccountToken is needed to since password-initializer.sh is
#using kubectl to access the Kubernetes api
automountServiceAccountToken: true
metadata:
  name: {{ .Release.Name }}-promscale-initializer-sa
  namespace: {{ template "tobs.namespace" . }}
  labels:
    app: {{ template "tobs.fullname" . }}
    chart: {{ template "tobs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-promscale-initializer-role
  namespace: {{ template "tobs.namespace" . }}
  labels:
    app: {{ template "tobs.fullname" . }}
    chart: {{ template "tobs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-promscale-initializer-rolebinding
  namespace: {{ template "tobs.namespace" . }}
  labels:
    app: {{ template "tobs.fullname" . }}
    chart: {{ template "tobs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-promscale-initializer-role
subjects:
- namespace: {{ template "tobs.namespace" . }}
  kind: ServiceAccount
  name: {{ .Release.Name }}-promscale-initializer-sa
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.promscale.connectionSecretName }}
  namespace: {{ template "tobs.namespace" . }}
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app: {{ template "tobs.fullname" . }}
    chart: {{ template "tobs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
stringData:
  PROMSCALE_DB_PORT: "5432"
  PROMSCALE_DB_HOST: "{{ .Release.Name }}.{{ .Release.Namespace }}.svc"
  PROMSCALE_DB_NAME: "postgres"
  PROMSCALE_DB_USER: "postgres"
  PROMSCALE_DB_SSL_MODE: "require"
  PROMSCALE_DB_PASSWORD: "PLACEHOLDER"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-connection-initializer
  namespace: {{ template "tobs.namespace" . }}
  labels:
    app: {{ template "tobs.fullname" . }}
    chart: {{ template "tobs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  password-initializer.sh: |
    #!/bin/bash
    while ! kubectl get secret {{ .Release.Name }}-credentials --namespace {{ template "tobs.namespace" . }}; do
      echo "Waiting for {{ .Release.Name }}-credentials secret."
      sleep 1
    done
    PASS=$(kubectl get secret --namespace {{ template "tobs.namespace" . }} {{ .Release.Name }}-credentials -o json | jq -r '.data["PATRONI_SUPERUSER_PASSWORD"]')
    kubectl get secret --namespace {{ template "tobs.namespace" . }} {{ .Values.promscale.connectionSecretName }} -o json | jq --arg PASS "$PASS" '.data["PROMSCALE_DB_PASSWORD"]=$PASS' | kubectl apply -f -
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-connection-secret-{{ .Release.Revision }}
  namespace: {{ template "tobs.namespace" . }}
  labels:
    app: {{ template "tobs.fullname" . }}
    chart: {{ template "tobs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    spec:
      containers:
      - name: copier
        image: bitnami/kubectl:latest
        command: [ '/scripts/password-initializer.sh' ]
        volumeMounts:
        - name: promscale-initializer
          mountPath: /scripts
      serviceAccountName: {{ .Release.Name }}-promscale-initializer-sa
      restartPolicy: OnFailure
      volumes:
      - name: promscale-initializer
        configMap:
          name: {{ .Release.Name }}-connection-initializer
          defaultMode: 0755
{{- end -}}
